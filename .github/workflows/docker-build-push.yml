name: Docker Build and Push

on:
  push:
    branches: [main, dev]
    paths:
      - 'app/**'
      - 'Dockerfile'
      - '!.github/**'
  pull_request:
    branches: [main, dev]
    paths:
      - 'app/**'
      - 'Dockerfile'
      - '!.github/**'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Config
        id: config
        run: |
          echo "project_id=hyperbola-476507" >> $GITHUB_OUTPUT
          echo "region=us-central1" >> $GITHUB_OUTPUT
          echo "repository_id=docker-repo" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ steps.config.outputs.region }}-docker.pkg.dev

      - name: Docker meta
        id: meta
        run: |
          IMAGE_BASE="${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app"
          echo "tags=${IMAGE_BASE}:${{ github.sha }},${IMAGE_BASE}:latest" >> $GITHUB_OUTPUT
          echo "image=${IMAGE_BASE}" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.image }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy vulnerability scanner (table output)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.image }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ steps.meta.outputs.image }}:${{ github.sha }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: sbom.spdx.json
          retention-days: 30

      - name: Push Docker Image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
        run: |
          docker push ${{ steps.meta.outputs.image }}:${{ github.sha }}
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker push ${{ steps.meta.outputs.image }}:latest
          fi
