name: Docker Build and Push

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/docker-build-push.yml'

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Load Config
        id: config
        run: |
          echo "project_id=$(grep 'project_id' terraform.tfvars | cut -d'=' -f2 | tr -d ' "')" >> $GITHUB_OUTPUT
          echo "region=$(grep 'region' terraform.tfvars | cut -d'=' -f2 | tr -d ' "')" >> $GITHUB_OUTPUT
          echo "repository_id=$(grep 'repository_id' terraform.tfvars | cut -d'=' -f2 | tr -d ' "')" >> $GITHUB_OUTPUT

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ steps.config.outputs.region }}-docker.pkg.dev

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: false
          load: true
          tags: |
            ${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app:${{ github.sha }}
            ${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy vulnerability scanner (table output)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app:${{ github.sha }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

      - name: Push Docker Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          IMAGE_BASE="${{ steps.config.outputs.region }}-docker.pkg.dev/${{ steps.config.outputs.project_id }}/${{ steps.config.outputs.repository_id }}/app"
          docker push ${IMAGE_BASE}:${{ github.sha }}
          docker push ${IMAGE_BASE}:latest

  trigger-deploy:
    needs: docker-build-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    uses: ./.github/workflows/k8s-deploy.yml
    secrets: inherit
    with:
      image_tag: latest
