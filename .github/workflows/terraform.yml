---
name: Terraform

'on':
  push:
    branches: [main, dev]
    paths:
      - '**.tf'
      - 'modules/**'
  pull_request:
    branches: [main, dev]
    paths:
      - '**.tf'
      - 'modules/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        type: choice
        options:
          - plan
          - apply
        default: 'plan'

concurrency:
  group: terraform-state
  cancel-in-progress: false

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      has_changes: ${{ steps.plan.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Init
        run: cd environments/dev && terraform init

      - name: Terraform Format
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Validate
        run: cd environments/dev && terraform validate

      - name: TFLint Setup
        uses: terraform-linters/setup-tflint@v4

      - name: TFLint
        run: tflint --init && tflint --recursive

      - name: tfsec Security Scan
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

      - name: Terraform Plan
        id: plan
        run: |
          cd environments/dev
          terraform plan -no-color -compact-warnings \
            -lock-timeout=5m -out=tfplan -detailed-exitcode || EXIT_CODE=$?
          if [ "$EXIT_CODE" -eq 0 ]; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          elif [ "$EXIT_CODE" -eq 2 ]; then
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          else
            exit "$EXIT_CODE"
          fi

      - name: Upload Plan
        if: steps.plan.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.sha }}
          path: environments/dev/tfplan
          retention-days: 7

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const hasChanges = '${{ steps.plan.outputs.has_changes }}';
            const status = hasChanges === 'true'
              ? '⚠️ Changes detected'
              : '✅ No changes';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan\n\n${status}\n\nCheck the Actions tab for details.`
            });

  apply:
    needs: plan
    if: |
      needs.plan.outputs.has_changes == 'true' &&
      ((github.event_name == 'push' && github.ref == 'refs/heads/main') ||
       (github.event_name == 'workflow_dispatch' &&
        github.event.inputs.action == 'apply'))
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Init
        run: cd environments/dev && terraform init

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.sha }}
          path: environments/dev

      - name: Terraform Apply
        run: |
          cd environments/dev
          terraform apply -no-color -auto-approve tfplan
