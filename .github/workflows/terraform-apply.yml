name: Terraform Apply

on:
  push:
    branches: [main]
    paths:
      - '**.tf'
      - 'modules/**'
      - '.github/workflows/terraform-*.yml'
      - '!app/**'
      - '!k8s-manifests/**'
      - '!k8s-examples/**'
  workflow_dispatch:

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

      - uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: TFLint Init
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: TFLint
        run: tflint --recursive

  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json

      - name: Generate Plan Checksum
        run: |
          sha256sum tfplan > tfplan.sha256
          echo "PLAN_CHECKSUM=$(cat tfplan.sha256 | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            tfplan
            tfplan.sha256
            tfplan.json

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('tfplan.json', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Terraform Plan\n\`\`\`json\n${plan.substring(0, 5000)}\n\`\`\`\n\nChecksum: \`${process.env.PLAN_CHECKSUM}\``
            })

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ steps.outputs.outputs.project_id }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
          service_account: "github-actions-sa@${{ steps.outputs.outputs.project_id }}.iam.gserviceaccount.com"

      - name: Verify Plan Checksum
        run: |
          sha256sum -c tfplan.sha256
          if [ $? -ne 0 ]; then
            echo "❌ Plan checksum verification failed! Plan may have been tampered with."
            exit 1
          fi
          echo "✅ Plan checksum verified"

      - name: Show Plan Summary
        run: terraform show tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Output Summary
        if: always()
        run: |
          echo "### Terraform Apply Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          terraform output -json >> $GITHUB_STEP_SUMMARY
